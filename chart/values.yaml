# Default values for cnpg-plugin-wal-g.

cnpg:
  tls:
    existingServerCertSecretName: ""
    existingClientCertSecretName: ""
    certManager:
      createSelfSignedIssuer: true
      existingIssuerName: ""
      createServerCert: true
      createClientCert: true
      certsDuration: 43800h # 5 years (5 * 365 * 24 hours)
      certsRenewBefore: 8760h  # 1 year (365 * 24 hours)

# Number of replicas for plugin controller-manager deployment
replicaCount: 1

# Image for plugin controller-manager deployment
image:
  repository: ghcr.io/wal-g/cnpg-plugin-wal-g
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext: 
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - "ALL"

# -- Priority indicates the importance of a controller-manager Pod relative to other Pods.
priorityClassName: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20
readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}
