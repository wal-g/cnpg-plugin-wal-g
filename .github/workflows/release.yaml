name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    name: Release with GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Chart version
        run: |
          # Update chart version and appVersion
          sed -i "s/version: "0.0.0-helm-chart"/version: ${{ steps.extract_version.outputs.version }}-helm-chart/" chart/Chart.yaml
          sed -i 's/appVersion: "0.0.0"/appVersion: "${{ steps.extract_version.outputs.version }}"/' chart/Chart.yaml

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.extract_version.outputs.version }}

      - name: Package and push Helm chart
        run: |
          # Package the Helm chart
          make helm-package
          
          # Push the Helm chart to GitHub Container Registry
          make helm-push CHART=cnpg-plugin-wal-g-${{ steps.extract_version.outputs.version }}-helm-chart.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          # Build and push the Docker image with the version tag
          make docker-build docker-push IMG=ghcr.io/wal-g/cnpg-plugin-wal-g:${{ steps.extract_version.outputs.version }}

          # Also tag as latest
          make docker-build docker-push IMG=ghcr.io/wal-g/cnpg-plugin-wal-g:latest
