---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: backupconfigs.cnpg-extensions.yandex.cloud
spec:
  group: cnpg-extensions.yandex.cloud
  names:
    kind: BackupConfig
    listKind: BackupConfigList
    plural: backupconfigs
    singular: backupconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackupConfig is the Schema for the backupconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackupConfigSpec defines the desired state of BackupConfig.
            properties:
              deltaMaxSteps:
                description: Determines how many delta backups can be between full
                  backups. Defaults to 0.
                type: integer
              downloadConcurrency:
                description: How many goroutines to use during backup && wal downloading.
                  Default value is evaluated at runtime
                type: integer
              downloadFileRetries:
                description: 'How many times failed file will be retried during backup
                  / wal download. Default: 15.'
                type: integer
              encryption:
                description: Backups encryption configuration
                properties:
                  encryptionSecret:
                    description: |-
                      Name of the existing secret with entryption keys.

                      If empty / not provided - secret will be generated automatically
                      with name "<backupconfig-name>-encryption" and random key

                      For "libsodium" method secret should contain single key "libsodiumKey"
                      containing hex-encoded 32-bytes length key i.e. created with `openssl rand -hex 32`
                    type: string
                  method:
                    description: |-
                      Method used for backup encryption.
                      Currently "libsodium" method supported only.
                      Use "none" or leave empty to disable encryption.
                    type: string
                type: object
              resources:
                description: |-
                  Resources for wal-g sidecar configurations

                  IMPORTANT: resource changes will NOT trigger auto-update on clusters
                  Manual rollout with pods recreation needed instead
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              retention:
                description: Backups retention configuration
                properties:
                  deleteBackupsAfter:
                    description: |-
                      DeleteBackupsAfter is the retention policy to be used for backups
                      and WALs (i.e. '60d'). It is expressed in the form
                      of `XXu` where `XX` is a positive integer and `u` is in `[dwmh]` -
                      days, weeks, months, hours (i.e. '7d', '4w', '1m', '6h').
                      Different units should not be used at the same time
                      If not specified - backups will not be deleted automatically
                    pattern: ^[1-9][0-9]*[dwmh]$
                    type: string
                  ignoreForBackupConfigDeletion:
                    default: false
                    description: |-
                      Whether to disable S3 storage cleanup on BackupConfig deletion.
                      Useful when managing storage retention by S3 lifecycle policies.
                      When true, the operator will skip storage cleanup when BackupConfig is deleted.
                    type: boolean
                  ignoreForBackupDeletion:
                    default: false
                    description: |-
                      Whether to disable S3 storage cleanup on individual Backup resource deletion.
                      Useful when managing storage retention by S3 lifecycle policies.
                      When true, the operator will skip storage cleanup when individual Backup resources are deleted.
                    type: boolean
                  ignoreForManualBackups:
                    default: false
                    description: |-
                      Whether to ignore manually created backups in retention policy

                      IMPORTANT: Automatically created backups should have OwnerReference with
                      ScheduledBackup or Cluster resource to be treated as auto backups!
                      (.spec.backupOwnerReference: "self" or "cluster" in ScheduledBackup resource)
                    type: boolean
                  minBackupsToKeep:
                    default: 5
                    description: |-
                      Minimal number of full backups to keep, this will keep backups
                      even if backup should be deleted due to DeleteBackupsAfter policy
                      Default is 5 backups
                    maximum: 99
                    minimum: 0
                    type: integer
                type: object
              storage:
                description: Backups storage configuration
                properties:
                  s3:
                    description: S3StorageConfig defines S3-specific configuration
                      for object storage
                    properties:
                      accessKeyId:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      accessKeySecret:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      customCA:
                        description: |-
                          Custom CA certificate reference for S3 endpoint
                          Can be specified in either ConfigMap or Secret
                        properties:
                          key:
                            description: Key in the ConfigMap or Secret containing
                              the CA certificate
                            type: string
                          kind:
                            description: |-
                              Kind of the resource containing the CA certificate
                              Can be either "ConfigMap" or "Secret"
                            enum:
                            - ConfigMap
                            - Secret
                            type: string
                          name:
                            description: Name of the ConfigMap or Secret containing
                              the CA certificate
                            type: string
                        required:
                        - key
                        - kind
                        - name
                        type: object
                      endpointUrl:
                        description: |-
                          S3 endpoint url
                          Mutually exclusive with EndpointURLFrom
                        type: string
                      endpointUrlFrom:
                        description: |-
                          Reference to get endpoint URL value from Secret or ConfigMap
                          Mutually exclusive with EndpointURL
                        properties:
                          configMapKeyRef:
                            description: Reference to a key in a ConfigMap
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Reference to a key in a Secret
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      forcePathStyle:
                        description: |-
                          To enable path-style addressing (i.e., http://s3.amazonaws.com/BUCKET/KEY)
                          when connecting to an S3-compatible service that lack of support for
                          sub-domain style bucket URLs (i.e., http://BUCKET.s3.amazonaws.com/KEY)
                        type: boolean
                      prefix:
                        description: |-
                          e.g. s3://bucket/path/to/folder
                          Mutually exclusive with PrefixFrom
                        type: string
                      prefixFrom:
                        description: |-
                          Reference to get prefix value from Secret or ConfigMap
                          Mutually exclusive with Prefix
                        properties:
                          configMapKeyRef:
                            description: Reference to a key in a ConfigMap
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Reference to a key in a Secret
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      region:
                        description: |-
                          S3 Region
                          Mutually exclusive with RegionFrom
                        type: string
                      regionFrom:
                        description: |-
                          Reference to get region value from Secret or ConfigMap
                          Mutually exclusive with Region
                        properties:
                          configMapKeyRef:
                            description: Reference to a key in a ConfigMap
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Reference to a key in a Secret
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      storageClass:
                        description: |-
                          S3 storage class used for backup files.
                          Default is "STANDARD". Other supported values include
                          "STANDARD_IA" for Infrequent Access and
                          "REDUCED_REDUNDANCY" for Reduced Redundancy.
                        type: string
                    type: object
                  type:
                    type: string
                required:
                - type
                type: object
              tarDisableFsync:
                description: 'Disable calling fsync after writing files when extracting
                  tar files. Default: false.'
                type: boolean
              tarSizeThreshold:
                description: 'Threshold in bytes is size of one backup bundle. Default:
                  1073741823.'
                format: int64
                type: integer
              uploadConcurrency:
                description: How many concurrency streams to use during backup uploading.
                  Default value is evaluated at runtime
                type: integer
              uploadDiskConcurrency:
                description: How many concurrency streams are reading disk during
                  backup uploading. Default value is evaluated at runtime
                type: integer
              uploadDiskRateLimitBytesPerSecond:
                description: Disk read rate limit during backup creation in bytes
                  per second. Default value is evaluated at runtime
                type: integer
              uploadNetworkRateLimitBytesPerSecond:
                description: Network upload rate limit during backup uploading in
                  bytes per second. Default value is evaluated at runtime
                type: integer
            required:
            - storage
            type: object
          status:
            description: BackupConfigStatus defines the observed state of BackupConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
